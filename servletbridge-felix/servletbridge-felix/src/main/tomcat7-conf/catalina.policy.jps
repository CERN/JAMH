// Licensed to the Apache Software Foundation (ASF) under one or more
// contributor license agreements.  See the NOTICE file distributed with
// this work for additional information regarding copyright ownership.
// The ASF licenses this file to You under the Apache License, Version 2.0
// (the "License"); you may not use this file except in compliance with
// the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// ============================================================================
// catalina.policy - Security Policy Permissions for Tomcat 7
//
// This file contains a default set of security policies to be enforced (by the
// JVM) when Catalina is executed with the "-security" option.  In addition
// to the permissions granted here, the following additional permissions are
// granted to each web application:
//
// * Read access to the web application's document root directory
// * Read, write and delete access to the web application's working directory
//
// $Id: catalina.policy 1347048 2012-06-06 18:47:00Z markt $
// ============================================================================


// ========== SYSTEM CODE PERMISSIONS =========================================


// These permissions apply to javac
grant codeBase "file:${java.home}/lib/-" {
        permission java.security.AllPermission;
};

// These permissions apply to all shared system extensions
grant codeBase "file:${java.home}/jre/lib/ext/-" {
        permission java.security.AllPermission;
};

// These permissions apply to javac when ${java.home] points at $JAVA_HOME/jre
grant codeBase "file:${java.home}/../lib/-" {
        permission java.security.AllPermission;
};

// These permissions apply to all shared system extensions when
// ${java.home} points at $JAVA_HOME/jre
grant codeBase "file:${java.home}/lib/ext/-" {
        permission java.security.AllPermission;
};


// ========== CATALINA CODE PERMISSIONS =======================================


// These permissions apply to the daemon code
grant codeBase "file:${catalina.home}/bin/commons-daemon.jar" {
        permission java.security.AllPermission;
};

// These permissions apply to the logging API
// Note: If tomcat-juli.jar is in ${catalina.base} and not in ${catalina.home},
// update this section accordingly.
//  grant codeBase "file:${catalina.base}/bin/tomcat-juli.jar" {..}
grant codeBase "file:${catalina.home}/bin/tomcat-juli.jar" {
        permission java.io.FilePermission "${java.home}${file.separator}lib${file.separator}logging.properties", "read";

        permission java.io.FilePermission "${catalina.base}${file.separator}conf${file.separator}logging.properties", "read";
        permission java.io.FilePermission "${catalina.base}${file.separator}logs", "read, write";
        permission java.io.FilePermission "${catalina.base}${file.separator}logs${file.separator}*", "read, write";

        permission java.lang.RuntimePermission "shutdownHooks";
        permission java.lang.RuntimePermission "getClassLoader";
        permission java.lang.RuntimePermission "setContextClassLoader";

        permission java.util.logging.LoggingPermission "control";

        permission java.util.PropertyPermission "java.util.logging.config.class", "read";
        permission java.util.PropertyPermission "java.util.logging.config.file", "read";
        permission java.util.PropertyPermission "catalina.base", "read";
        permission java.util.PropertyPermission "org.apache.juli.logging.UserDataHelper.CONFIG", "read";
        permission java.util.PropertyPermission "org.apache.juli.logging.UserDataHelper.SUPPRESSION_TIME", "read";
        permission java.util.PropertyPermission "org.apache.juli.ClassLoaderLogManager.debug", "read";
};

// These permissions apply to the server startup code
grant codeBase "file:${catalina.home}/bin/bootstrap.jar" {
        permission java.security.AllPermission;
};

// These permissions apply to the servlet API classes
// and those that are shared across all class loaders
// located in the "lib" directory
grant codeBase "file:${catalina.home}/lib/-" {
        permission java.security.AllPermission;
};

// The Manager application needs access to the following packages to support the
// session display functionality. These settings support the following
// configurations:
// - default CATALINA_HOME == CATALINA_BASE
// - CATALINA_HOME != CATALINA_BASE, per instance Manager in CATALINA_BASE
// - CATALINA_HOME != CATALINA_BASE, shared Manager in CATALINA_HOME

/*grant codeBase "file:${catalina.base}/webapps/manager/-" {
    permission java.security.AllPermission;
};*/

/*grant codeBase "file:${catalina.base}/webapps/host-manager/-" {
    permission java.security.AllPermission;
};*/

// Custom security permissions for the Servlet Felix bridge application
grant {
	
	permission java.lang.RuntimePermission "accessClassInPackage.*";

	permission java.lang.reflect.ReflectPermission "suppressAccessChecks";

	permission java.lang.RuntimePermission  "accessDeclaredMembers";
	permission java.lang.RuntimePermission "createSecurityManager";
	permission java.lang.RuntimePermission "getClassLoader";
	permission java.lang.RuntimePermission "setContextClassLoader";
	permission java.lang.RuntimePermission "createClassLoader";
	permission java.lang.RuntimePermission "*", "shutdownHooks";
	permission java.lang.RuntimePermission "accessDeclaredMembers";
	permission java.lang.RuntimePermission "setFactory";

	permission javax.management.MBeanPermission "*" ,"registerMBean,queryNames,unregisterMBean";
	permission javax.management.MBeanServerPermission "createMBeanServer,findMBeanServer";
	permission javax.management.MBeanTrustPermission "register";

	permission java.net.NetPermission "specifyStreamHandler";
	
	permission java.util.PropertyPermission "*", "read,write";
	
	permission java.io.FilePermission "${java.home}${file.separator}lib${file.separator}-", "read";
	permission java.io.FilePermission "${catalina.home}${file.separator}common${file.separator}lib${file.separator}-", "read";
	permission java.io.FilePermission "${catalina.home}/temp", "read,write,delete";
	permission java.io.FilePermission "${catalina.home}/temp/-", "read,write,delete";
	permission java.io.FilePermission "/afs/cern.ch/project/jps/reps/jira-listeners", "read,write,delete";
	permission java.io.FilePermission "/afs/cern.ch/project/jps/reps/jira-listeners/-", "read,write,delete";
	
	permission org.osgi.framework.AdminPermission "*", "lifecycle,class,execute,extensionLifecycle,listener,metadata,resolve,resource,startlevel,context";
	permission org.osgi.framework.ServicePermission "*", "register,get";
	permission org.osgi.framework.BundlePermission "*", "provide,require,host,fragment";
	permission org.osgi.framework.PackagePermission "*", "export,import";
	
	permission org.osgi.service.cm.ConfigurationPermission "*", "configure";
   
};
